/*
* To use this script add the following in the beginning of your build.gradle
plugins {
    id "com.jfrog.bintray" version "1.0"
    id 'maven-publish'
}
* */

// --- project settings add-ons
Project.metaClass.githubUrl = "https://github.com/<username>/<project>"
Project.metaClass.license = ""

project.afterEvaluate {
    bintray {
        // user and key come from ~/.gradle/gradle.properties
        user = getProp("bintray_user")
        key = getProp("bintray_key")

        publications = ['maven']
        publish = true
        dryRun = false
        pkg {
            repo = 'maven'
            name = project.name
            desc = project.description
            websiteUrl = project.githubUrl
            issueTrackerUrl = project.githubUrl + '/issues'
            vcsUrl = project.githubUrl + '.git'
            licenses = [project.license]
            labels = ['android']
            publicDownloadNumbers = true
//        attributes= ['a': ['ay1', 'ay2'], 'b': ['bee'], c: 'cee'] //Optional package-level attributes
            //Optional version descriptor
            version {
                name = project.version
//            desc = 'optional, version-specific description'
//            released  = 'optional, date of the version release' //2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
//            vcsTag = '1.3.0'
//            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin'] //Optional version-level attributes
//            gpg {
//                sign = true //Determines whether to GPG sign the files. The default is false
//                passphrase = 'passphrase' //Optional. The passphrase for GPG signing'
//            }
            }
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            groupId project.group
            artifactId project.name
            version project.version
        }
    }
    repositories {
        // Create an ivy publication destination named “releases”
        maven {
            name "maven"
            url "http://dl.bintray.com/dant3/maven"
        }
    }
}

def getProp(String propertyName) {
    return getPropOrElse(propertyName, { "" })
}

def getPropOrElse(String propertyName, Closure<String> fallback) {
    if (project.hasProperty(propertyName)) {
        return project.property(propertyName)
    } else {
        return fallback.call()
    }
}
